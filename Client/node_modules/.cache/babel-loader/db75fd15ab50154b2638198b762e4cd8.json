{"ast":null,"code":"var _jsxFileName = \"/home/alejandro/Projects/MasterDevel prueba/client/client/src/Forms/Credentials.js\";\nimport React, { useState } from 'react';\nimport { Snackbar, Grid } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nexport default function CredentialsContainer() {\n  const [snackbar, setSnackbar] = useState();\n  const [open, setOpen] = useState(true);\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setSnackbar();\n    setOpen(false);\n  };\n\n  const submit = e => {\n    e.preventDefault();\n    setSnackbar();\n    setOpen(true);\n    const form = document.getElementById('credentials');\n    const formData = new FormData(form);\n    var object = {};\n    formData.forEach(function (value, key) {\n      object[key] = value;\n    });\n    const requestOptions = {\n      method: 'PUT',\n      body: JSON.stringify(object),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    fetch('http://localhost:8080/credential', requestOptions).then(response => response).then(function (data) {\n      if (data.ok) {\n        setSnackbar( /*#__PURE__*/React.createElement(Snackbar, {\n          anchorOrigin: {\n            vertical: 'top',\n            horizontal: 'center'\n          },\n          open: open,\n          autoHideDuration: 6000,\n          onClose: handleClose,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Alert, {\n          variant: \"filled\",\n          onClose: handleClose,\n          severity: \"success\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }\n        }, \"Credentials added successfully\")));\n      } else {\n        setSnackbar( /*#__PURE__*/React.createElement(Snackbar, {\n          anchorOrigin: {\n            vertical: 'top',\n            horizontal: 'center'\n          },\n          open: open,\n          autoHideDuration: 6000,\n          onClose: handleClose,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Alert, {\n          variant: \"filled\",\n          onClose: handleClose,\n          severity: \"error\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }\n        }, data.status + ' ' + data.statusText)));\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, snackbar ? snackbar : null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => submit(e),\n    id: \"credentials\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, \"Key\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"key\",\n    id: \"key\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, \"Shared Secret\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"shared_secret\",\n    id: \"shared_secret\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, \"Add Credentials\")))));\n}","map":{"version":3,"sources":["/home/alejandro/Projects/MasterDevel prueba/client/client/src/Forms/Credentials.js"],"names":["React","useState","Snackbar","Grid","Alert","CredentialsContainer","snackbar","setSnackbar","open","setOpen","handleClose","event","reason","submit","e","preventDefault","form","document","getElementById","formData","FormData","object","forEach","value","key","requestOptions","method","body","JSON","stringify","headers","fetch","then","response","data","ok","vertical","horizontal","status","statusText"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Snackbar, Grid } from '@material-ui/core'\nimport { Alert } from '@material-ui/lab'\n\nexport default function CredentialsContainer() {\n    const [snackbar, setSnackbar] = useState();\n    const [open, setOpen] = useState(true);\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setSnackbar();\n        setOpen(false);\n    };\n\n    const submit = (e) => {\n        e.preventDefault();\n        setSnackbar();\n        setOpen(true);\n        const form = document.getElementById('credentials');\n        const formData = new FormData(form);\n\n        var object = {};\n        formData.forEach(function (value, key) {\n            object[key] = value;\n        });\n\n        const requestOptions = {\n            method: 'PUT',\n            body: JSON.stringify(object),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        fetch('http://localhost:8080/credential', requestOptions)\n            .then(response => response)\n            .then(function (data) {\n                if (data.ok) {\n                    setSnackbar(\n                        <Snackbar\n                            anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n                            open={open} autoHideDuration={6000} onClose={handleClose}>\n                            <Alert variant='filled' onClose={handleClose} severity=\"success\">\n                                Credentials added successfully\n                            </Alert>\n                        </Snackbar>\n                    )\n                } else {\n                    setSnackbar(\n                        <Snackbar\n                            anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n                            open={open} autoHideDuration={6000} onClose={handleClose}>\n                            <Alert variant='filled' onClose={handleClose} severity=\"error\">\n                                {data.status + ' ' + data.statusText}\n                            </Alert>\n                        </Snackbar>\n                    )\n                }\n            });\n    }\n\n    return (\n        <React.Fragment>\n            {snackbar ? snackbar : null}\n            <form onSubmit={(e) => submit(e)} id='credentials'>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <label>Key</label>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <input name='key' id='key' required />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <label>Shared Secret</label>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <input name='shared_secret' id='shared_secret' required />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <button type='submit'>Add Credentials</button>\n                    </Grid>\n                </Grid>\n            </form>\n        </React.Fragment>\n    );\n}"]},"metadata":{},"sourceType":"module"}