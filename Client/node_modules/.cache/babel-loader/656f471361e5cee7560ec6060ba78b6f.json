{"ast":null,"code":"import CryptoJS from 'crypto-js';\nexport const Sign = (message, route) => {\n  let data = buildData(message);\n  let secret = document.getElementById('shared_secret').value;\n  let hash = CryptoJS.HmacSHA256(data.split(' ').join('') + 'x-Route:' + route + ';', secret);\n  return CryptoJS.enc.Base64.stringify(hash);\n};\n\nconst buildData = message => {\n  let reply = '';\n\n  for (const [key, value] of Object.entries(message)) {\n    reply += Array.isArray(value) ? '[' : '';\n    reply += key + ':' + value;\n    reply += Array.isArray(value) ? ']' : '';\n    repy += ';';\n  }\n\n  console.log(reply);\n  return reply;\n};","map":{"version":3,"sources":["/home/alejandro/Projects/MasterDevel prueba/client/client/src/Utils/HashUtil.js"],"names":["CryptoJS","Sign","message","route","data","buildData","secret","document","getElementById","value","hash","HmacSHA256","split","join","enc","Base64","stringify","reply","key","Object","entries","Array","isArray","repy","console","log"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,WAArB;AAEA,OAAO,MAAMC,IAAI,GAAG,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACpC,MAAIC,IAAI,GAAGC,SAAS,CAACH,OAAD,CAApB;AAEA,MAAII,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,KAAtD;AACA,MAAIC,IAAI,GAAGV,QAAQ,CAACW,UAAT,CAAoBP,IAAI,CAACQ,KAAL,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAArB,IAA2B,UAA3B,GAAwCV,KAAxC,GAAgD,GAApE,EAAyEG,MAAzE,CAAX;AACA,SAAON,QAAQ,CAACc,GAAT,CAAaC,MAAb,CAAoBC,SAApB,CAA8BN,IAA9B,CAAP;AACH,CANM;;AAQP,MAAML,SAAS,GAAIH,OAAD,IAAa;AAC3B,MAAIe,KAAK,GAAG,EAAZ;;AAEA,OAAK,MAAM,CAACC,GAAD,EAAMT,KAAN,CAAX,IAA2BU,MAAM,CAACC,OAAP,CAAelB,OAAf,CAA3B,EAAoD;AAChDe,IAAAA,KAAK,IAAII,KAAK,CAACC,OAAN,CAAcb,KAAd,IAAuB,GAAvB,GAA6B,EAAtC;AACAQ,IAAAA,KAAK,IAAIC,GAAG,GAAG,GAAN,GAAYT,KAArB;AACAQ,IAAAA,KAAK,IAAII,KAAK,CAACC,OAAN,CAAcb,KAAd,IAAuB,GAAvB,GAA6B,EAAtC;AACAc,IAAAA,IAAI,IAAI,GAAR;AACH;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AAEA,SAAOA,KAAP;AACH,CAZD","sourcesContent":["import CryptoJS from 'crypto-js'\n\nexport const Sign = (message, route) => {\n    let data = buildData(message);\n\n    let secret = document.getElementById('shared_secret').value;\n    let hash = CryptoJS.HmacSHA256(data.split(' ').join('') + 'x-Route:' + route + ';', secret);\n    return CryptoJS.enc.Base64.stringify(hash);\n}\n\nconst buildData = (message) => {\n    let reply = '';\n\n    for (const [key, value] of Object.entries(message)) {\n        reply += Array.isArray(value) ? '[' : '';\n        reply += key + ':' + value;\n        reply += Array.isArray(value) ? ']' : '';\n        repy += ';';\n    }\n    console.log(reply)\n\n    return reply;\n}"]},"metadata":{},"sourceType":"module"}