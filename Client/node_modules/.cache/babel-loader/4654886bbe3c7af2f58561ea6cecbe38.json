{"ast":null,"code":"var _jsxFileName = \"/home/alejandro/Projects/MasterDevel prueba/client/client/src/Forms/AddMessage.js\";\nimport React, { useState } from 'react';\nimport { Snackbar, Grid } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { Sign } from '../Utils/HashUtil';\nexport default function AddMessage() {\n  const [snackbar, setSnackbar] = useState();\n  const [open, setOpen] = useState(true);\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setSnackbar();\n    setOpen(false);\n  };\n\n  const submit = e => {\n    e.preventDefault();\n    setSnackbar();\n    var object = {};\n    object.msg = document.getElementById('msg').value;\n    object.tags = document.getElementById('tags').value.split(',');\n    const body = JSON.stringify(object);\n    const route = 'http://localhost:8080/message';\n    const requestOptions = {\n      method: 'POST',\n      body,\n      headers: {\n        'Content-Type': 'application/json',\n        'x-Key': document.getElementById('key').value,\n        'x-Signature': Sign(object, route),\n        'x-Route': route,\n        'x-Body': body\n      }\n    };\n    fetch(route, requestOptions).then(response => response).then(function (data) {\n      setOpen(true);\n\n      if (data.ok) {\n        setSnackbar( /*#__PURE__*/React.createElement(Snackbar, {\n          anchorOrigin: {\n            vertical: 'top',\n            horizontal: 'center'\n          },\n          open: open,\n          autoHideDuration: 6000,\n          onClose: handleClose,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Alert, {\n          variant: \"filled\",\n          onClose: handleClose,\n          severity: \"success\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }\n        }, \"Message added successfully\")));\n      } else {\n        setSnackbar( /*#__PURE__*/React.createElement(Snackbar, {\n          anchorOrigin: {\n            vertical: 'top',\n            horizontal: 'center'\n          },\n          open: open,\n          autoHideDuration: 6000,\n          onClose: handleClose,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Alert, {\n          variant: \"filled\",\n          onClose: handleClose,\n          severity: \"error\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }\n        }, data.status + ' ' + data.statusText)));\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, snackbar, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => submit(e),\n    id: \"credentials\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, \"Msg\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"msg\",\n    id: \"msg\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, \"Tags (separated by comma)\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"tags\",\n    id: \"tags\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, \"Add Message\")))));\n}","map":{"version":3,"sources":["/home/alejandro/Projects/MasterDevel prueba/client/client/src/Forms/AddMessage.js"],"names":["React","useState","Snackbar","Grid","Alert","Sign","AddMessage","snackbar","setSnackbar","open","setOpen","handleClose","event","reason","submit","e","preventDefault","object","msg","document","getElementById","value","tags","split","body","JSON","stringify","route","requestOptions","method","headers","fetch","then","response","data","ok","vertical","horizontal","status","statusText"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Snackbar, Grid } from '@material-ui/core'\nimport { Alert } from '@material-ui/lab'\nimport { Sign } from '../Utils/HashUtil';\n\nexport default function AddMessage() {\n    const [snackbar, setSnackbar] = useState();\n    const [open, setOpen] = useState(true);\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setSnackbar();\n        setOpen(false);\n    };\n    \n\n    const submit = (e) => {\n        e.preventDefault();\n        setSnackbar();\n        var object = {};\n        \n        object.msg = document.getElementById('msg').value;\n        object.tags = document.getElementById('tags').value.split(',');\n\n        const body = JSON.stringify(object);\n        const route = 'http://localhost:8080/message';\n\n        const requestOptions = {\n            method: 'POST',\n            body,\n            headers: {\n                'Content-Type': 'application/json',\n                'x-Key': document.getElementById('key').value,\n                'x-Signature': Sign(object, route),\n                'x-Route': route,\n                'x-Body': body\n            }\n        }\n\n        fetch(route, requestOptions)\n            .then(response => response)\n            .then(function (data) {\n                setOpen(true);\n                if (data.ok) {\n                    setSnackbar(\n                        <Snackbar\n                            anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n                            open={open} autoHideDuration={6000} onClose={handleClose}>\n                            <Alert variant='filled' onClose={handleClose} severity=\"success\">\n                                Message added successfully\n                            </Alert>\n                        </Snackbar>\n                    )\n                } else {\n                    setSnackbar(\n                        <Snackbar\n                            anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n                            open={open} autoHideDuration={6000} onClose={handleClose}>\n                            <Alert variant='filled' onClose={handleClose} severity=\"error\">\n                                {data.status + ' ' + data.statusText}\n                            </Alert>\n                        </Snackbar>\n                    )\n                }\n            });\n    }\n\n    return (\n        <React.Fragment>\n            {snackbar}\n            <form onSubmit={(e) => submit(e)} id='credentials'>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <label>Msg</label>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <input name='msg' id='msg' required />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <label>Tags (separated by comma)</label>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <input name='tags' id='tags' required />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <button type='submit'>Add Message</button>\n                    </Grid>\n                </Grid>\n            </form>\n        </React.Fragment>\n    );\n}"]},"metadata":{},"sourceType":"module"}