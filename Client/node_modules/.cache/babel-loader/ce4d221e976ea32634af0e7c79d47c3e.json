{"ast":null,"code":"var _jsxFileName = \"/home/alejandro/Projects/MasterDevel prueba/client/client/src/Forms/GetMessages.js\";\nimport React, { useState } from 'react';\nimport { Snackbar, Grid } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { Sign } from '../Utils/HashUtil';\nexport default function GetMessages() {\n  const [snackbar, setSnackbar] = useState();\n  const [open, setOpen] = useState(true);\n  const [messages, setMessages] = useState([]);\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const submit = e => {\n    e.preventDefault();\n    setSnackbar();\n    let object = {};\n    object.tag = document.getElementById('tag').value;\n    const body = JSON.stringify(object);\n    const route = 'http://localhost:8080/messages/' + object.tag;\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-Key': document.getElementById('key').value,\n        'x-Signature': Sign(object, route),\n        'x-Route': route\n      }\n    };\n    fetch(route, requestOptions).then(response => response.json()).then(function (data) {\n      console.log(data);\n\n      if (data.message && data.message === 'Message retreived') {\n        setMessages(data.dataObject);\n        setSnackbar( /*#__PURE__*/React.createElement(Snackbar, {\n          anchorOrigin: {\n            vertical: 'Top',\n            horizontal: 'Center'\n          },\n          open: open,\n          autoHideDuration: 6000,\n          onClose: handleClose,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Alert, {\n          variant: \"filled\",\n          onClose: handleClose,\n          severity: \"success\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }\n        }, \"Messages retreived successfully\")));\n      } else {\n        setSnackbar( /*#__PURE__*/React.createElement(Snackbar, {\n          anchorOrigin: {\n            vertical: 'Top',\n            horizontal: 'Center'\n          },\n          open: open,\n          autoHideDuration: 6000,\n          onClose: handleClose,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Alert, {\n          variant: \"filled\",\n          onClose: handleClose,\n          severity: \"error\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }\n        }, data.status + ' ' + data.statusText)));\n      }\n    });\n  };\n\n  const printMessages = () => {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, messages.map(message => {\n      /*#__PURE__*/\n      React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }\n      }, \"msg: \", message);\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, snackbar, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => submit(e),\n    tag: \"credentials\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }, \"Msg tag\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"tag\",\n    id: \"tag\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 29\n    }\n  }, \"Get Message\"))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, printMessages()))));\n}","map":{"version":3,"sources":["/home/alejandro/Projects/MasterDevel prueba/client/client/src/Forms/GetMessages.js"],"names":["React","useState","Snackbar","Grid","Alert","Sign","GetMessages","snackbar","setSnackbar","open","setOpen","messages","setMessages","handleClose","event","reason","submit","e","preventDefault","object","tag","document","getElementById","value","body","JSON","stringify","route","requestOptions","method","headers","fetch","then","response","json","data","console","log","message","dataObject","vertical","horizontal","status","statusText","printMessages","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Snackbar, Grid } from '@material-ui/core'\nimport { Alert } from '@material-ui/lab'\nimport { Sign } from '../Utils/HashUtil';\n\nexport default function GetMessages() {\n    const [snackbar, setSnackbar] = useState();\n    const [open, setOpen] = useState(true);\n    const [messages, setMessages] = useState([])\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setOpen(false);\n    };\n\n\n    const submit = (e) => {\n        e.preventDefault();\n        setSnackbar();\n\n        let object = {};\n        object.tag = document.getElementById('tag').value;\n\n        const body = JSON.stringify(object);\n        const route = 'http://localhost:8080/messages/' + object.tag;\n\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'x-Key': document.getElementById('key').value,\n                'x-Signature': Sign(object, route),\n                'x-Route': route\n            }\n        }\n\n        fetch(route, requestOptions)\n            .then(response => response.json())\n            .then(function (data) {\n                console.log(data);\n                if (data.message && data.message === 'Message retreived') {\n                    setMessages(data.dataObject)\n\n                    setSnackbar(\n                        <Snackbar\n                            anchorOrigin={{ vertical: 'Top', horizontal: 'Center' }}\n                            open={open} autoHideDuration={6000} onClose={handleClose}>\n                            <Alert variant='filled' onClose={handleClose} severity=\"success\">\n                                Messages retreived successfully\n                            </Alert>\n                        </Snackbar>\n                    )\n                } else {\n                    setSnackbar(\n                        <Snackbar\n                            anchorOrigin={{ vertical: 'Top', horizontal: 'Center' }}\n                            open={open} autoHideDuration={6000} onClose={handleClose}>\n                            <Alert variant='filled' onClose={handleClose} severity=\"error\">\n                                {data.status + ' ' + data.statusText}\n                            </Alert>\n                        </Snackbar>\n                    )\n                }\n            });\n    }\n\n    const printMessages = () => {\n        return (\n            <Grid container>\n                { messages.map(message => {\n                    <Grid item xs={12}>\n                        msg: {message}\n                    </Grid>\n                })\n                }\n            </Grid>\n        )\n    }\n\n    return (\n        <React.Fragment>\n            {snackbar}\n            <form onSubmit={(e) => submit(e)} tag='credentials'>\n                <Grid container spacing={2}>\n                    <Grid container item xs={6}>\n                        <Grid item xs={12}>\n                            <label>Msg tag</label>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <input name='tag' id='tag' required />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <button type='submit'>Get Message</button>\n                        </Grid>\n                    </Grid>\n                    <Grid container item xs={6}>\n                        {\n                            printMessages()\n                        }\n                    </Grid>\n                </Grid>\n            </form>\n        </React.Fragment>\n    );\n}"]},"metadata":{},"sourceType":"module"}